---
# Bedroom
# - alias: "Light: automatically turn on the bedroom"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_bedroom
#       to: "on"
#     - platform: state
#       entity_id: binary_sensor.motion_sensor_bedroom
#       to: "on"
#   condition:
#     - condition: state
#       entity_id: input_select.sleep_mode
#       state: "off"
#     - condition: state
#       entity_id: input_boolean.automatic_bedroom_lights
#       state: "on"
#   action:
#     - service: light.turn_on
#       entity_id: light.bedroom_lights
#       data:
#         transition: 2
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: turn on automatic_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on

- alias: "Light: turn on automatic_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_lights
    service: input_boolean.turn_on

# - alias: "Light: automatically turn off the bedroom"
#   initial_state: "on"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_bedroom
#     to: "off"
#     for: "00:15:00"
#   condition:
#     - condition: state
#       entity_id: input_boolean.bedroom_lights_automatically_turned_on
#       state: "on"
#     - condition: state
#       entity_id: light.bedroom_lights
#       state: "on"
#     - condition: state
#       entity_id: input_boolean.automatic_bedroom_lights
#       state: "on"
#   action:
#     service: light.turn_off
#     entity_id: light.bedroom_lights
#     # data:
#     #   transition: 10

- alias: "Light: turn off bedroom lights auto switch"
  mode: parallel
  trigger:
    - platform: state
      entity_id: light.bedroom_lights
      to: "off"
  condition:
    condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on

# Toilet
# - alias: "Light: turn on toilet"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_toilet
#       from: "off"
#       to: "on"
#     - platform: state
#       entity_id: binary_sensor.motion_sensor_toilet
#       from: "off"
#       to: "on"
#   condition: "{{ is_state('light.toilet_lights', 'off') }}"
#   action:
#     service: light.turn_on
#     data:
#       entity_id: light.toilet_lights


# - alias: "Light: turn off toilet after 5 minutes of inactivity"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_toilet
#     from: "on"
#     to: "off"
#   condition: "{{ is_state('light.toilet_lights', 'on') }}"
#   action:
#     service: light.turn_off
#     data:
#       entity_id: light.toilet_lights

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/15"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_toilet
      state: "off"
    - condition: state
      entity_id: light.toilet_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.toilet_lights

# Bathroom
# - alias: "Light: turn on bathroom if motion"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_bathroom
#     to: "on"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#   action:
#     service: light.turn_on
#     data:
#       entity_id: light.bathroom_lights
#       transition: 1

# - alias: "Light: turn off bathroom"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_bathroom
#     to: "off"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#   action:
#     service: light.turn_off
#     data:
#       entity_id: light.bathroom_lights
#       # transition: 1

# Kitchen
# - alias: "Light: turn on kitchen if motion"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_kitchen
#       to: "on"
#     - platform: state
#       entity_id: binary_sensor.motion_sensor_kitchen
#       to: "on"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#     - condition: template
#       value_template: "{{ state_attr('switch.adaptive_lighting_kitchen', 'manual_control') | length == 0 }}"
#   action:
#     - service: light.turn_on
#       data:
#         entity_id: light.kitchen_lights
#         transition: 1

# - alias: "Light: turn off kitchen"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_kitchen
#     to: "off"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#   action:
#     - service: light.turn_off
#       data:
#         entity_id: light.kitchen_lights
#         # transition: 1

# Living Room
# - alias: "Light: turn on living room if motion"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.activity_in_living_room
#     to: "on"

#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#     - condition: state
#       entity_id: input_select.sleep_mode
#       state: "off"
#   action:
#     - service: light.turn_on
#       data:
#         entity_id: light.living_room_lights
#         transition: 1

# Hallway
# - alias: "Light: turn on hallway"
#   unique_id: hallway_lights_motion
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.activity_in_hallway
#       to: "on"
#     - platform: state
#       entity_id: binary_sensor.hallway_motion
#       to: "on"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#   action:
#     service: light.turn_on
#     data:
#       entity_id:
#         - light.hallway_lights
#         - light.staircase_lights
#       transition: 1

- alias: "Light: turn off hallway"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_hallway
    from: "on"
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.hallway_lights
        - light.staircase_lights

# - alias: "Light: turn on living room if motion (backup automation)"
#   trigger:
#     platform: state
#     entity_id: binary_sensor.living_room_motion
#     to: "on"
#   condition:
#     - condition: state
#       entity_id: input_boolean.automatic_lights
#       state: "on"
#   action:
#     service: light.turn_on
#     data:
#       entity_id: light.living_room_lights
#       transition: 1

# Extra checks

# - id: 'motion_light_pantry_with_lux'
#   alias: "Light: Turn on pantry lights only when dark"
#   use_blueprint:
#     path: motion/motion_light_lux.yaml
#     input:
#       motion_entity: binary_sensor.pantry_motion # ASSUMED
#       light_sensor: sensor.pantry_illuminance # ASSUMED
#       illuminance_threshold: 75
#       light_target:
#         entity_id:
#           - light.pantry_lights
#       no_motion_wait: 300 # 5 minutes
#       adaptive_switch: switch.adaptive_lighting_pantry

# - id: 'motion_light_gym_room_with_lux'
#   alias: "Light: Turn on Gym Room lights only when dark"
#   use_blueprint:
#     path: motion/motion_light_lux.yaml
#     input:
#       motion_entity: binary_sensor.gym_room_motion # ASSUMED
#       light_sensor: sensor.gym_room_illuminance # ASSUMED
#       illuminance_threshold: 75
#       light_target:
#         entity_id:
#           - light.gym_ceiling
#       no_motion_wait: 300 # 5 minutes
#       adaptive_switch: switch.adaptive_lighting_gym_room # ASSUMED

# - id: 'motion_light_walk_in_wardrobe_with_lux'
#   alias: "Light: Turn on Walk-in Wardrobe lights only when dark"
#   use_blueprint:
#     path: motion/motion_light_lux.yaml
#     input:
#       motion_entity: binary_sensor.walk_in_wardrobe_motion # ASSUMED
#       light_sensor: sensor.walk_in_wardrobe_illuminance # ASSUMED
#       illuminance_threshold: 75
#       light_target:
#         entity_id:
#           - light.walk_in_wardrobe_ceiling
#       no_motion_wait: 300 # 5 minutes
#       adaptive_switch: switch.adaptive_lighting_walk_in_wardrobe # ASSUMED

- !include lights/bedroom.yaml
- !include lights/toilet.yaml
- !include lights/hallway.yaml
- !include lights/bathroom.yaml
- !include lights/living_room.yaml
- !include lights/kitchen.yaml
- !include lights/general.yaml
- !include lights/when_dark.yaml
- !include lights/staircase.yaml
