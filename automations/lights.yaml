---
# Bedroom
- alias: "Light: automatically turn on the bedroom"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_bedroom
      to: "on"
    - platform: state
      entity_id: binary_sensor.motion_sensor_bedroom
      to: "on"
  condition:
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    - service: light.turn_on
      entity_id: light.bedroom_lights
      data:
        transition: 2
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: turn on automatic_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on

- alias: "Light: turn on automatic_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_lights
    service: input_boolean.turn_on

- alias: "Light: turn off bedroom after 2 hours of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    from: "on"
    to: "off"
    for: "02:00:00"
  condition: "{{ is_state('light.bedroom_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.bedroom_lights

- alias: "Light: automatically turn off the bedroom"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "off"
    for: "00:15:00"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
    - condition: state
      entity_id: light.bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.bedroom_lights
    # data:
    #   transition: 10

- alias: "Light: turn off bedroom lights auto switch"
  mode: parallel
  trigger:
    - platform: state
      entity_id: light.bedroom_lights
      to: "off"
  condition:
    condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on

# Toilet
- alias: "Light: turn on toilet"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_toilet
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.motion_sensor_toilet
      from: "off"
      to: "on"
  condition: "{{ is_state('light.toilet_lights', 'off') }}"
  action:
    service: light.turn_on
    data:
      entity_id: light.toilet_lights

- alias: "Light: Turn on Toilet light when state changes from unavailable"
  description: "Sets the toilet light to on when it becomes available."
  trigger:
    - platform: state
      entity_id: light.toilet_lights
      from: "unavailable"
    - platform: state
      entity_id: light.toilet_lights
      from: "unknown"
  action:
    - service: light.turn_on
      target:
        entity_id: light.toilet_lights
      data:
        brightness: 255
        color_temp_kelvin: 6500
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id:
          - switch.adaptive_lighting_toilet
        manual_control: false
  mode: single

- alias: "Light: Turn on Hallway Lights when state changes from unavailable"
  description: "Sets the Hallway Lights to on when it becomes available."
  trigger:
    - platform: state
      entity_id: light.hallway_lights
      from: "unavailable"
    - platform: state
      entity_id: light.hallway_lights
      from: "unknown"
  action:
    - service: light.turn_on
      target:
        entity_id: light.hallway_lights
      data:
        brightness: 255
        color_temp_kelvin: 6500
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id:
          - switch.adaptive_lighting_hallway
        manual_control: false
  mode: single

- alias: "Light: Turn on Bathroom light when state changes from unavailable"
  description: "Sets the bathroom light to on when it becomes available."
  trigger:
    - platform: state
      entity_id: light.bathroom_lights
      from: "unavailable"
    - platform: state
      entity_id: light.bathroom_lights
      from: "unknown"
  action:
    - service: light.turn_on
      target:
        entity_id: light.bathroom_lights
      data:
        brightness: 255
        color_temp_kelvin: 6500
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id:
          - switch.adaptive_lighting_bathroom
        manual_control: false
  mode: single

- alias: "Light: turn off toilet after 5 minutes of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
    from: "on"
    to: "off"
  condition: "{{ is_state('light.toilet_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.toilet_lights

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/15"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_toilet
      state: "off"
    - condition: state
      entity_id: light.toilet_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.toilet_lights

# Bathroom
- alias: "Light: turn on bathroom if motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id: light.bathroom_lights
      transition: 1

- alias: "Light: turn off bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_off
    data:
      entity_id: light.bathroom_lights
      # transition: 1

# Kitchen
- alias: "Light: turn on kitchen if motion"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_kitchen
      to: "on"
    - platform: state
      entity_id: binary_sensor.motion_sensor_kitchen
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
    - condition: template
      value_template: "{{ state_attr('switch.adaptive_lighting_kitchen', 'manual_control') | length == 0 }}"
  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_lights
        transition: 1

- alias: "Light: turn off kitchen"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    - service: light.turn_off
      data:
        entity_id: light.kitchen_lights
        # transition: 1

# Upstairs
- alias: "Light: turn on upstairs lights if motion upstairs or staircase"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_upstairs
      to: "on"
    - platform: state
      entity_id: binary_sensor.activity_on_staircase
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_upstairs
      state: "false"
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    - service: light.turn_on
      data:
        entity_id: light.upstairs_lights
        transition: 1

# Living Room
- alias: "Light: turn on living room if motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "on"

  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
  action:
    - service: light.turn_on
      data:
        entity_id: light.living_room_lights
        transition: 1

- alias: "Light: turn off living room if no upstairs motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
    - condition: state
      entity_id: binary_sensor.activity_upstairs
      state: "off"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room_lights
        # transition: 1

# Hallway
- alias: "Light: turn on hallway"
  trigger:
    - platform: state
      entity_id: binary_sensor.activity_in_hallway
      to: "on"
    - platform: state
      entity_id: binary_sensor.hallway_motion
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id:
        - light.hallway_lights
        - light.staircase_lights
      transition: 1

- alias: "Light: turn off hallway"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_hallway
    from: "on"
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.hallway_lights
        - light.staircase_lights

- alias: "Light: turn on living room if motion (backup automation)"
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_motion_new
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id: light.living_room_lights
      transition: 1

# Extra checks
- alias: "Light: turn off living room (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_upstairs
      state: "off"
    - condition: state
      entity_id: light.living_room_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.living_room_lights

- alias: "Light: turn off kitchen (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "0"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_upstairs
      state: "off"
    - condition: state
      entity_id: light.kitchen_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.kitchen_lights

- alias: "Light: turn off bedroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bedroom
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
  action:
    - service: light.turn_off
      entity_id: light.bedroom_lights
    - service: light.turn_off
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
