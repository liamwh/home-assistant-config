---
# Bedroom
- alias: "Light: turn on automatic_bedroom_lights switch"
  trigger:
    platform: time
    at: "12:00"
  action:
    entity_id: input_boolean.automatic_bedroom_lights
    service: input_boolean.turn_on

- alias: "Light: turn off bedroom after 2 hours of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    from: "on"
    to: "off"
    for: "02:00:00"
  condition: "{{ is_state('light.bedroom_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.bedroom_lights

- alias: "Light: turn off toilet after 5 minutes of inactivity"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_toilet
    from: "on"
    to: "off"
    for: "00:05:00"
  condition: "{{ is_state('light.toilet_lights', 'on') }}"
  action:
    service: light.turn_off
    data:
      entity_id: light.toilet_lights

- alias: "Light: automatically turn on the bedroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "on"
  variables:
    off_lights: >
      {{ expand(state_attr("light.bedroom_lights", "entity_id"))
          | selectattr("state", "eq", "off")
          | map(attribute="entity_id")
          | list }}
  condition:
    - "{{ (off_lights | length) > 0 }}"
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    - alias: Turn on lights that are off
      repeat:
        count: "{{ off_lights | length }}"
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: "{{ off_lights[repeat.index - 1] }}"
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_lights_automatically_turned_on

- alias: "Light: automatically turn off the bedroom"
  initial_state: "on"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bedroom
    to: "off"
    for: "00:08:00"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
    - condition: state
      entity_id: light.bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.bedroom_lights
    data:
      transition: 10

- alias: "Light: turn off bedroom lights auto switch"
  mode: parallel
  trigger:
    - platform: state
      entity_id: light.bedroom_lights
      to: "off"
  condition:
    condition: state
    entity_id: input_boolean.bedroom_lights_automatically_turned_on
    state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.bedroom_lights_automatically_turned_on

# Bathroom
- alias: "Light: turn on bathroom if motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id: light.bathroom_lights
      transition: 1

- alias: "Light: turn off bathroom"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_bathroom
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_off
    data:
      entity_id: light.bathroom_lights
      transition: 1

# Toilet
- alias: "Light: Turn on Toilet light when state changes from unavailable"
  description: "Sets the toilet light to on when it becomes available."
  trigger:
    - platform: state
      entity_id: light.toilet
      from: "unavailable"
    - platform: state
      entity_id: light.toilet
      from: "unknown"
  action:
    - service: light.turn_on
      target:
        entity_id: light.toilet
  mode: single

# Kitchen
- alias: "Light: turn on kitchen if motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_lights
        transition: 1

- alias: "Light: turn off kitchen"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_kitchen
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    - service: light.turn_off
      data:
        entity_id: light.kitchen_lights
        transition: 1

# Living Room
- alias: "Light: turn on living room if motion"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
    - condition: state
      entity_id: input_select.sleep_mode
      state: "off"
  action:
    - service: light.turn_on
      data:
        entity_id: light.living_room_lights
        transition: 1

- alias: "Light: turn off living room"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_living_room
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    - service: light.turn_off
      data:
        entity_id: light.living_room_lights
        transition: 1

# Hallway
- alias: "Light: turn on hallway"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_hallway
    from: "off"
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id:
        - light.hallway_lights
        - light.staircase_lights
      transition: 1

- alias: "Light: turn off hallway"
  trigger:
    platform: state
    entity_id: binary_sensor.activity_in_hallway
    from: "on"
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.hallway_lights
        - light.staircase_lights
      transition: 1

- alias: "Light: turn on living room if motion (backup automation)"
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_living_room
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.automatic_lights
      state: "on"
  action:
    service: light.turn_on
    data:
      entity_id: light.living_room_lights
      transition: 1

# Extra checks
- alias: "Light: turn off living room (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_living_room
      state: "off"
    - condition: state
      entity_id: light.living_room_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.living_room_lights

- alias: "Light: turn off kitchen (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "0"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_kitchen
      state: "off"
    - condition: state
      entity_id: light.kitchen_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.kitchen_lights

- alias: "Light: turn off toilet (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "0"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_toilet
      state: "off"
    - condition: state
      entity_id: light.toilet_lights
      state: "on"
  action:
    service: light.turn_off
    entity_id: light.toilet_lights

- alias: "Light: turn off bedroom (extra check)"
  description: In case the other automation failed
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: binary_sensor.activity_in_bedroom
      state: "off"
    - condition: state
      entity_id: input_boolean.automatic_bedroom_lights
      state: "on"
    - condition: state
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
      state: "on"
  action:
    - service: light.turn_off
      entity_id: light.bedroom_lights
    - service: light.turn_off
      entity_id: input_boolean.bedroom_lights_automatically_turned_on
