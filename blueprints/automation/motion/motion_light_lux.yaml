blueprint:
  name: Motion-activated Light with Ambient Lux & Adaptive Lighting
  description: >
    Turn on a light when motion is detected - but only if ambient
    illuminance is below your configured threshold. Uses Adaptive
    Lighting by default, with a fallback to a plain light.turn_on.
  domain: automation
  source_url: https://github.com/liamwh/blueprints/motion_light_lux_adaptive.yaml

  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    light_sensor:
      name: Illuminance Sensor
      description: Sensor measuring ambient light (lux)
      selector:
        entity:
          domain: sensor
          device_class: illuminance

    illuminance_threshold:
      name: Lux Threshold
      default: 50
      selector:
        number:
          min: 0
          max: 10000
          unit_of_measurement: lx

    light_target:
      name: Light Target
      selector:
        target:
          entity:
            domain: light

    no_motion_wait:
      name: Wait Time (seconds)
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds

    use_adaptive:
      name: Use Adaptive Lighting
      description: If enabled, calls adaptive_lighting.apply. Otherwise falls back to light.turn_on.
      default: true
      selector:
        boolean: {}

    adaptive_switch:
      name: Adaptive Lighting Switch
      description: The switch entity created by your Adaptive Lighting configuration.
      selector:
        entity:
          domain: switch

    transition_time:
      name: Transition Time (seconds)
      default: 1
      selector:
        number:
          min: 0
          max: 6553
          unit_of_measurement: seconds

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"

condition:
  - condition: numeric_state
    entity_id: !input light_sensor
    below: !input illuminance_threshold
  - condition: state
    entity_id: input_boolean.automatic_lights
    state: "on"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not input.use_adaptive }}"
        sequence:
          - service: light.turn_on
            target: !input light_target
    default:
      - service: adaptive_lighting.apply
        data:
          entity_id: !input adaptive_switch
          lights: !input light_target.entity_id
          transition: !input transition_time

  - wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      from: "on"
      to: "off"

  - delay: !input no_motion_wait

  - service: light.turn_off
    target: !input light_target